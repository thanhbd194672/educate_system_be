FROM php:8.2.13-alpine

ENV TZ="Asia/Ho_Chi_Minh"

# Install lib raw image & read exif file
RUN apk update \
    && apk add --no-cache zip unzip pkgconf nano \
    && apk add --no-cache jpegoptim optipng pngquant gifsicle \
    && apk add --no-cache libraw exiftool imagemagick

RUN apk add --no-cache libzip-dev \
      && docker-php-ext-install zip \
    && apk add --no-cache gmp-dev \
      && docker-php-ext-install gmp \
    && apk add --no-cache libpq-dev \
      && docker-php-ext-install bcmath pdo_mysql pdo_pgsql \
    && apk add --no-cache freetype-dev libjpeg-turbo-dev libpng-dev libwebp-dev \
      && docker-php-ext-configure gd --with-freetype --with-jpeg --with-webp \
      && docker-php-ext-install -j$(nproc) gd \
    && apk add --no-cache --virtual .phpize-deps $PHPIZE_DEPS imagemagick-dev libtool && pecl install imagick \
      && docker-php-ext-enable imagick \
    && pecl install redis \
      && docker-php-ext-enable redis \
    && apk add --no-cache openssl-dev libsasl && pecl install mongodb \
      && docker-php-ext-enable mongodb \
    && docker-php-ext-install exif \
    && docker-php-ext-enable opcache

# Install
RUN docker-php-ext-install pcntl \
    && pecl install swoole && docker-php-ext-enable swoole

# Clean
RUN docker-php-source delete \
    && rm -rf /var/cache/apk/*

# Code
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

COPY app /www/app
COPY bootstrap /www/bootstrap
COPY config /www/config
COPY lang /www/lang
COPY public /www/public
COPY resources /www/resources
COPY routes /www/routes
COPY storage /www/storage
COPY artisan /www/artisan
COPY composer.json /www/composer.json
COPY composer.lock /www/composer.lock

ARG B_TAG

# dev
COPY .env /www/.env
#RUN echo "$B_TAG" | grep -E '^dev(-[0-9]+)?$' && echo 'dev' || rm -rf /www/.env

COPY _docker/php.ini /usr/local/etc/php/conf.d/cf-php.ini
COPY _docker/octane.ini /usr/local/etc/php/conf.d/cf-octane.ini
COPY _docker/opcache.ini /usr/local/etc/php/conf.d/cf-opcache.ini

WORKDIR /www

RUN composer install --optimize-autoloader --no-dev

# Optimize
RUN php artisan optimize:clear \
    && php artisan event:cache \
    && php artisan route:cache \
    && php artisan view:cache \
    && php artisan storage:link

EXPOSE 8000

#CMD ["php", "artisan", "serve", "--host=0.0.0.0", "--port=8000"]
CMD ["php", "artisan", "octane:start", "--server=swoole", "--host=0.0.0.0", "--port=8000"]
